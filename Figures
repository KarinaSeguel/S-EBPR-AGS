title: "Sulfide-Thiosulfate"
author: "Karina Seguel Suazo"
date: "22 December 2023"

##Project scope
This material contains analysis of microbial community of 2 labscale reactorsoperated for 80 days,dataset using 16S rRNA amplicon sequencing data. 

## Load packages 
library(ampvis2)
library(openxlsx)
library(dplyr)
library(dunn.test)
library(data.table)
library(vegan)
library(ggplot2)
library(forcats)
library(dplyr)
library(tidyverse)
library(reshape2)
library(ggpubr)


#set working directory
setwd(".../Seq_Data_2022")

#Load datasets
meta<-read.delim("Metadata_KS.txt")
otu<-read_tsv("ASVtable.tsv")

d <- amp_load(otutable = otu,
                taxonomy = "ASVs.R1.sintax",
                metadata = "Metadata_KS.txt")

dn <- amp_subset_samples(d, minreads = 10000, normalise = TRUE)
dn

#Subset data per reactor or sample type

s<-amp_subset_samples(dn, Reactor_Name %in%c("Sulfide_1_2021"))
t<-amp_subset_samples(dn, Reactor_Name %in%c("Thiosulphate_2_2021"))
inoculum<-amp_subset_samples(dn, Day %in%c("0"))
type<-amp_subset_samples(d, Type %in%c("Thiosulfate","Sulfide","Inoculum"))
type2<-amp_subset_samples(d, Type %in%c("Thiosulfate","Sulfide"))


##Figure 5
#A) and B) heatmaps

sulf<-amp_heatmap(s,
                 group_by = "Day",
                 tax_aggregate = "Genus",
                 tax_add = c("Phylum"),
                 tax_show = 10,
                 normalise = F,
                 plot_na = FALSE,
                plot_functions = F,
                 plot_values_size = 4,
                plot_colorscale= "sqrt",
                plot_legendbreaks = c(1,5,15),
)+theme_bw() + theme(axis.text.y = element_text(size = 12, colour = "black", face = "italic"), 
                     axis.text.x = element_text(size = 12, colour = "black", vjust = 1, hjust = 0.5, angle= 0),
                     legend.position = "none",panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(color = "black", fill = NA, size = 1),plot.title = element_text(hjust = 0.5))+ggtitle("Sulfide")+ xlab(label = "Days of operation")

sulf
thio<-amp_heatmap(t,
                 group_by = "Day",
                 tax_aggregate = "Genus",
                 tax_add = c("Phylum"),
                 tax_show = 10,
                 normalise = F,
                 plot_na = FALSE,
                plot_functions = F,
                plot_values_size = 4,
                plot_colorscale= "sqrt",
                plot_legendbreaks = c(1,5,15),
)+theme_bw() + theme(axis.text.y = element_text(size = 12, colour = "black", face = "italic"), 
                     axis.text.x = element_text(size = 12, colour = "black", vjust = 1, hjust = 0.5, angle= 0),
                     legend.position = "right",panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(color = "black", fill = NA, size = 1),
    plot.title = element_text(hjust = 0.5))+ggtitle("Thiosulfate")+xlab(label = "Days of operation")

thio
# C)
# Install and load necessary packages
top20<-amp_heatmap(dn,
                 group_by = "Sample_Name",
                 tax_aggregate = "Genus",
                 tax_show = 20,
                 normalise = F,
textmap = T)

bacterial_genera<- data.frame(t(top20))

environmental_factors <-dn[["metadata"]]
env_factors<-select(environmental_factors,c("Thiosulfate","Sulfide"))#,"SVI10_SVI","SVI","Dv50","RS")) #"SVI5","SVI","Dv50

# Columns to convert to numeric (Because R sees "," as character)
#numeric_columns <- c("Dv50") #, "SVI10_SVI", "SVI", "Dv50"

# Remove commas and convert to numeric for each specified column
#env_factors[numeric_columns] <- lapply(env_factors[numeric_columns], function(x) as.numeric(gsub(",", "", x)))

# Print the modified data frame
print(env_factors)

# Perform correlation analysis
cor_results <- rcorr(as.matrix(cbind(bacterial_genera)))

# Extract correlation coefficients and p-values
cor_matrix <- cor_results$r
p_values <- cor_results$P

# Create a matrix of NA values for insignificant correlations
cor_matrix[p_values > 0.05] <- NA

# Plot the heatmap
corrplot(cor_matrix, method = "circle", p.mat = p_values, sig.level = 0.05, insig = "blank",tl.col = 'black',tl.pos = "l", type = 'lower',diag=T)


#D) CCA plot

cca<-amp_ordinate(
  st,
  filter_species = 0.1,
  type = "CCA",
  distmeasure = "bray",
  transform = "hellinger",
  constrain =  c("Sulfide","Thiosulfate"),
  x_axis = 1,
  y_axis = 2,
  sample_color_by = c("Reactor"),
  sample_colorframe_label_size = 3,
  sample_label_by = "Day",
  sample_label_size = 4,
  sample_label_segment_color = "black",
  sample_point_size = 2,
  species_plot = T,
  species_label_taxonomy = "Genus",
  species_label_size = 0.5,
  species_label_color = "grey10",
  species_point_size = 0.5,
  species_shape = 20,
  envfit_numeric =c("Sulfide","Thiosulfate"),
  envfit_signif_level = 0.005,
  envfit_textsize = 4,
  envfit_textcolor = "darkred",
  envfit_numeric_arrows_scale = 1,
  envfit_arrowcolor = "darkred",
  envfit_show = TRUE,
  repel_labels = TRUE,
  opacity = 0.8,
  tax_empty = "best"
)+theme_bw() + theme(axis.text.y = element_text(size = 12, colour = "black"), 
                     axis.text.x = element_text(size = 12, colour = "black",
                                                vjust = 1, hjust = 0.5, angle= 0))+

  # Adjust X and Y axis limits
  scale_x_continuous(limits = c(-3, 3)) +
  scale_y_continuous(limits = c(-3, 3))
    

cca2<- cca+geom_vline(xintercept = 0, linetype = "dotted", color = "black", size = 0.5) +
  geom_hline(yintercept = 0, linetype = "dotted", color = "black", size = 0.5) +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(color = "black", fill = NA, size = 1)
  ) 

cca2

Figure 6. A) Core community and B) Barchart

# Select Core community of dataset containing only samples from last days.

t2<-amp_venn(
  type2,
  group_by = "Type",
  cut_a = 0.1,
  cut_f = 80,
  text_size = 5,
  normalise = T,
  detailed_output = T
)

table<-t2[["Otutable"]]

#Extract only Core OTUs and genus 
df<-select(table,c("SW112021A","TW112021B","Shared","OTU","Genus"))
df2<-df%>%filter(Shared=="Core")%>%select("SW112021A","TW112021B","OTU","Genus")
df2

# Rename columns
df3 <- df2 %>%
  rename(Sulfide = SW112021A, Thiosulfate = TW112021B)

# Replace blank cell with "no classification"
df3$Genus <- ifelse(df2$Genus == "", "No classification", df3$Genus)

# Remove "g__" from each element in the "Genus" column
df3$Genus <- sub("^g__", "", df3$Genus)

#Replace Ca_ for Ca.
df3$Genus <- sub("^Ca_", "Ca. ", df3$Genus)

#Select only sulide, thiosulfate and Genus
df3<-df3%>%select(Sulfide,Thiosulfate,Genus)

df4 <- df3 %>%
  group_by(Genus) %>%
  summarize(
    Sulfide = sum(Sulfide),
    Thiosulfate = sum(Thiosulfate)
  )

# Convert to a long format for ggplot2
df2_long <- tidyr::pivot_longer(df4, cols = c("Sulfide", "Thiosulfate"), names_to = "Sample", values_to = "Value")
#Plot
core_plot <- ggplot(df2_long, aes(x = Genus, y = Value, fill = Sample)) +
  geom_bar(stat = "identity", position = "dodge", color = "black") +
   scale_y_continuous(limits = c(0, 20), expand = c(0, 0)) +
  theme_minimal() +
  scale_fill_manual(values = c("SBR-S" = brewer.pal(12, "Set3")[1], "SBR-T" = brewer.pal(12, "Set3")[2])) +  # Set3 colors+
  scale_fill_brewer(palette = "Set3") +  # Change the color palette
  labs(x = "", y = "Relative abundance %", fill = "Sample") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
    legend.position = "right",
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
     axis.ticks.y = element_line(color = "black"),
    axis.line = element_line(colour = "black"),
    axis.title = element_text(size = 12, face = "bold"),
    axis.text = element_text(size = 10),
    plot.title = element_text(size = 10,face = "plain")
  )

# Print the plot
print(core_plot)

 ## Figure6.B Barchart top 4 microorganisms
#Sulfide reactor
df <-amp_subset_taxa(s, tax_vector = c("g__Ca_Competibacter","g__Ca_Accumulibacter","g__Dechloromonas","g__Thiothrix"),normalise = F)


bacteria_df <- amp_heatmap(df,
            group_by = "Day",
                 tax_aggregate = "Genus",
                 tax_add = c("Phylum"),
                 tax_show = 10,
                 normalise = FALSE,
                 plot_na = FALSE,min_abundance = 0.01,textmap = T
                 
) 


# Save row names as a column 'Bacteria'
bacteria_df <- bacteria_df %>%
  rownames_to_column(var = "Bacteria")


# Select only numeric columns
numeric_columns <- bacteria_df %>%
  select_if(is.numeric)

# Calculate the sum of each column for the "Other" row
other_row <- numeric_columns %>%
  summarise(across(everything(), sum, na.rm = TRUE))

# Calculate the remaining value to make the total 100
remaining_value <- 100 - other_row
# Bind the new row to the dataframe
bacteria_df <- bind_rows(bacteria_df, remaining_value)

# Create the "Other" row with character values
bacteria_df <- bacteria_df %>%
  mutate(Bacteria = ifelse(is.na(Bacteria), "Other", Bacteria))

# Reshape the data to long format for better plotting
bacteria_long <- bacteria_df %>%
  pivot_longer(cols = -Bacteria, names_to = "Day", values_to = "Abundance") %>%
  mutate(Day = as.factor(gsub("X", "", Day)),  # Extract the numeric part of column names
         Bacteria = as.factor(Bacteria),
         Abundance = as.numeric(Abundance)) %>%
  arrange(Day, Bacteria)

# Convert 'Day' to numeric
bacteria_long$Day <- as.numeric(as.character(bacteria_long$Day))


bacteria_long <- bacteria_long %>%
  mutate(Bacteria = case_when(
    Bacteria == "Proteobacteria; Ca_Competibacter" ~ "Ca. Competibacter",
    Bacteria == "Proteobacteria; Thiothrix" ~ "Thiothrix",
    Bacteria == "Proteobacteria; Ca_Accumulibacter" ~ "Ca. Accumulibacter",
    Bacteria == "Proteobacteria; Dechloromonas" ~ "Dechloromonas",
    TRUE ~ as.character(Bacteria)  # Keep other values unchanged
  ))
# Convert 'Bacteria' to a factor with desired levels
bacteria_long$Bacteria <- factor(bacteria_long$Bacteria,
                                  levels = c("Ca. Competibacter", "Thiothrix", "Ca. Accumulibacter", "Dechloromonas", "Other"))

# Manually specify the order of days
custom_order <- c("0", "7", "14", "21", "28", "35", "42", "49", "56", "63", "70", "77", "80")  # Add or remove days as needed

# Convert "Day" to factor with custom order
bacteria_long$Day <- factor(bacteria_long$Day, levels = custom_order)

# Calculate the bar width based on the number of unique days
bar_width <- 0.8 / length(unique(bacteria_long$Day))

bar_S<- ggplot(bacteria_long, aes(x = Day, y = Abundance, fill = Bacteria)) +
    geom_bar(stat = "identity",position = "stack") +
  labs(title = "SBR-S",
       x = "Day",
       y = "Read abundance %") +
  scale_fill_manual(values = c("Ca. Competibacter" = "#92c5de",
                               "Thiothrix" = "#a1d99b",
                               "Ca. Accumulibacter" = "#e41a1c",
                               "Dechloromonas" = "#bdbdbd",
                               "Other" = "#9e9ac8")) +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
  theme_minimal() +
  theme(legend.position = "none",
        axis.text.x = element_text(color = "black", size = 10),
        axis.text.y = element_text(color = "black", size = 10),
        axis.title.y = element_text(color = "black", size = 12),
        axis.line.y = element_line(color = "black"),
        axis.ticks.y = element_line(color = "black"),
        plot.title = element_text(size = 14),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10),
        panel.grid = element_blank())
bar_S

##For thiosulfate reactor
df_t <-amp_subset_taxa(t, tax_vector = c("g__Ca_Competibacter","g__Ca_Accumulibacter","g__Dechloromonas","g__Thiothrix"),normalise = F)


bacteria_df_t <- amp_heatmap(df_t,
            group_by = "Day",
                 tax_aggregate = "Genus",
                 tax_add = c("Phylum"),
                 tax_show = 10,
                 normalise = FALSE,
                 plot_na = FALSE,min_abundance = 0.01,textmap = T
                 
) 

# Save row names as a column 'Bacteria'
bacteria_df_t <- bacteria_df_t %>%
  rownames_to_column(var = "Bacteria")

# Select only numeric columns
numeric_columns_t <- bacteria_df_t %>%
  select_if(is.numeric)

# Calculate the sum of each column for the "Other" row
other_row_t <- numeric_columns_t %>%
  summarise(across(everything(), sum, na.rm = TRUE))

# Calculate the remaining value to make the total 100
remaining_value_t <- 100 - other_row_t
# Bind the new row to the dataframe
bacteria_df_t <- bind_rows(bacteria_df_t, remaining_value_t)

# Create the "Other" row with character values
bacteria_df_t <- bacteria_df_t %>%
  mutate(Bacteria = ifelse(is.na(Bacteria), "Other", Bacteria))
# Reshape the data to long format for better plotting
bacteria_long_t <- bacteria_df_t %>%
  pivot_longer(cols = -Bacteria, names_to = "Day", values_to = "Abundance") %>% mutate(Day = as.factor(gsub("X", "", Day)),  # Extract the numeric part of column names
         Bacteria = as.factor(Bacteria),
         Abundance = as.numeric(Abundance)) %>%
  arrange(Day, Bacteria)

# Convert 'Day' to numeric
bacteria_long_t$Day <- as.numeric(as.character(bacteria_long_t$Day))


bacteria_long_t <- bacteria_long_t %>%
  mutate(Bacteria = case_when(
    Bacteria == "Proteobacteria; Ca_Competibacter" ~ "Ca. Competibacter",
    Bacteria == "Proteobacteria; Thiothrix" ~ "Thiothrix",
    Bacteria == "Proteobacteria; Ca_Accumulibacter" ~ "Ca. Accumulibacter",
    Bacteria == "Proteobacteria; Dechloromonas" ~ "Dechloromonas",
    TRUE ~ as.character(Bacteria)  # Keep other values unchanged
  ))


# Convert 'Bacteria' to a factor with desired levels
bacteria_long_t$Bacteria <- factor(bacteria_long_t$Bacteria,
                                  levels = c("Ca. Competibacter", "Thiothrix", "Ca. Accumulibacter", "Dechloromonas", "Other"))


# Manually specify the order of days
custom_order <- c("0", "7", "14", "21", "28", "35", "42", "49", "56", "63", "70", "77", "80")  # Add or remove days as needed

# Convert "Day" to factor with custom order
bacteria_long_t$Day <- factor(bacteria_long_t$Day, levels = custom_order)


# Calculate the bar width based on the number of unique days
bar_width <- 0.8 / length(unique(bacteria_long_t$Day))

bar_T<- ggplot(bacteria_long_t, aes(x = Day, y = Abundance, fill = Bacteria)) +
    geom_bar(stat = "identity",position = "stack") +
  labs(title = "SBR-T",
       x = "Day",
       y = "Read abundance %") +
  scale_fill_manual(values = c("Ca. Competibacter" = "#92c5de",
                               "Thiothrix" = "#a1d99b",
                               "Ca. Accumulibacter" = "#e41a1c",
                               "Dechloromonas" = "#bdbdbd",
                               "Other" = "#9e9ac8")) +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
  theme_minimal() +
  theme(legend.position = "right",
        axis.text.x = element_text(color = "black", size = 10),
        axis.text.y = element_text(color = "black", size = 10),
        axis.title.y = element_text(color = "black", size = 12),
        axis.line.y = element_line(color = "black"),
        axis.ticks.y = element_line(color = "black"),
        plot.title = element_text(size = 14),
        legend.text = element_text(size = 10),
        legend.title = element_text(size = 10),
        panel.grid = element_blank())

bar_T

ggarrange(bar_S,bar_T,labels = c("A)", "B)"), ncol = 2, nrow = 1, widths = c(0.45, 0.65))



##Figure 7. Alpha diversity analysis

alphadiversityresult <- amp_alphadiv(st_d,
  measure = c("shannon", "simpson"),richness = T,
  rarefy = NULL
)

#write.table(alphadiversityresult, file = "AlphaDiversity.txt",
        #    sep = "\t", dec = ",",
         #   row.names = TRUE)


s<-alphadiversityresult%>%filter(Reactor%in%c("SBR-S"))
t<-alphadiversityresult%>%filter(Reactor%in%c("SBR-T"))

a<-ggplot(s,aes(x=Day,y=Chao1))+geom_point()+theme_bw()+theme(axis.title.x = element_blank(),axis.text.x = element_text(size=10, vjust = 1),
        axis.text.y = element_text(size=10),
        panel.grid = element_blank(),axis.title.y = element_text(size=10))+ggtitle("SBR-S")+scale_y_continuous(limits = c(min=1500,max=2500))+theme( plot.title = element_text(hjust = 0.5, vjust = 0.5, size = 12))


b<-ggplot(t,aes(x=Day,y=Chao1))+geom_point()+theme_bw()+theme(axis.title.x = element_blank(),axis.text.x = element_text(size=10, vjust = 1),
        axis.text.y = element_text(size=10),panel.grid = element_blank(),axis.title.y = element_blank())+ggtitle("SBR-T")+scale_y_continuous(limits = c(min=1500,max=2500))+theme( plot.title = element_text(hjust = 0.5, vjust = 0.5, size = 12))

c<-ggplot(s,aes(x=Day,y=Shannon))+geom_point()+theme_bw()+theme(axis.text.x = element_text(size=10, vjust = 1),
        axis.text.y = element_text(size=10),panel.grid = element_blank())+scale_y_continuous(limits = c(min=4.5,max=6.5))

d<-ggplot(t,aes(x=Day,y=Shannon))+geom_point()+theme_bw()+theme(axis.text.x = element_text(size=10, vjust = 1),
        axis.text.y = element_text(size=10),panel.grid = element_blank(),axis.title.y = element_blank())+scale_y_continuous(limits = c(min=4.5,max=6.5))

ggarrange(a, b,c,d,  ncol = 2, nrow = 2,font.label = list(size = 14, face = "plain"))


ggsave("Chao_Shannon.png",width = 5,height = 5,dpi=300)
